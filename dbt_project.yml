name: 'snowplow_mobile'
version: '0.5.0'
config-version: 2

require-dbt-version: [">=1.0.0", "<2.0.0"]

profile: 'default'

model-paths: ["models"]
test-paths: ["tests"]
macro-paths: ["macros"]
docs-paths: ["docs"]
asset-paths: ["assets"]

target-path: "target"
clean-targets:
    - "target"
    - "dbt_modules"
    - "dbt_packages"

vars:
  snowplow_mobile:
    # Sources
    # snowplow__atomic_schema: "atomic_data_sample" # Only set if not using 'atomic' schema for Snowplow events data
    # snowplow__database: Only set if not using target.database for Snowplow events data -- WILL BE IGNORED FOR DATABRICKS
    # snowplow__events_table: "events" # Only set if not using 'events' table for Snowplow events data
    snowplow__events: "{{ source('atomic', 'events') }}"
    snowplow__session_context: "{{ source('atomic','com_snowplowanalytics_snowplow_client_session_1') }}"
    snowplow__mobile_context: "{{ source('atomic','com_snowplowanalytics_snowplow_mobile_context_1') }}"
    snowplow__geolocation_context: "{{ source('atomic','com_snowplowanalytics_snowplow_geolocation_context_1') }}"
    snowplow__application_context: "{{ source('atomic','com_snowplowanalytics_mobile_application_1') }}"
    snowplow__screen_context: "{{ source('atomic','com_snowplowanalytics_mobile_screen_1') }}"
    snowplow__app_errors_table: "{{ source('atomic','com_snowplowanalytics_snowplow_application_error_1') }}"
    snowplow__screen_view_events: "{{ source('atomic','com_snowplowanalytics_mobile_screen_view_1') }}"
    snowplow__sessions_table: "{{ ref('snowplow_mobile_sessions') }}" # Change to your custom sessions table if you have disabled the standard sessions table in favour of a custom version. Advanced config.
    # Variables - Standard Config
    snowplow__start_date: "2020-01-01"
    snowplow__backfill_limit_days: 30
    snowplow__app_id: []
    snowplow__platform: ['mob']
    snowplow__session_stitching: true
    # Setting default values for 3 enrichments below throughout package rather than here
    # Workaround for a bug (https://github.com/dbt-labs/dbt-core/issues/3698).
    # TODO: Return to having default values here once fixed.
    # snowplow__enable_mobile_context: false
    # snowplow__enable_geolocation_context: false
    # snowplow__enable_application_context: false
    # snowplow__enable_screen_context: false
    # snowplow__enable_app_errors_module: false
    snowplow__derived_tstamp_partitioned: true
    # Variables - Advanced Config
    snowplow__lookback_window_hours: 6
    snowplow__session_lookback_days: 730
    snowplow__days_late_allowed: 3
    snowplow__max_session_days: 3
    snowplow__upsert_lookback_days: 30
    snowplow__query_tag: "snowplow_dbt"
    snowplow__incremental_materialization: "snowplow_incremental"
    snowplow__dev_target_name: 'dev'
    snowplow__has_log_enabled: true
    snowplow__allow_refresh: false



# Remove models from the manifest during run start.
on-run-start:
  - "{{ snowplow_utils.snowplow_mobile_delete_from_manifest(var('models_to_remove', [])) }}"

# Update manifest table with last event consumed per sucessfully executed node/model
on-run-end:
  - "{{ snowplow_utils.snowplow_incremental_post_hook('snowplow_mobile') }}"


# Tag 'snowplow_mobile_incremental' allows snowplow_incremental_post_hook to identify Snowplow models
# and add their last sucessfull collector_tstamp to the manifest.
models:
  snowplow_mobile:
    +materialized: table
    base:
      manifest:
        +schema: "snowplow_manifest"
        redshift_postgres:
          enabled: "{{ target.type in ['redshift','postgres'] | as_bool() }}"
        default:
          enabled: "{{ target.type in ['bigquery', 'databricks', 'snowflake', 'spark'] | as_bool() }}"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
        bigquery:
          enabled: "{{ target.type == 'bigquery' | as_bool() }}"
        databricks:
          enabled: "{{ target.type in ['databricks', 'spark'] | as_bool() }}"
        redshift_postgres:
          enabled: "{{ target.type in ['redshift','postgres'] | as_bool() }}"
        snowflake:
          enabled: "{{ target.type == 'snowflake' | as_bool() }}"
    optional_modules:
      app_errors:
        +schema: "derived"
        +tags: "snowplow_mobile_incremental"
        scratch:
          +schema: "scratch"
          +tags: "scratch"
          bigquery:
            enabled: "{{ target.type == 'bigquery' | as_bool() }}"
          databricks:
            enabled: "{{ target.type in ['databricks', 'spark'] | as_bool() }}"
          redshift_postgres:
            enabled: "{{ target.type in ['redshift','postgres'] | as_bool() }}"
          snowflake:
            enabled: "{{ target.type == 'snowflake' | as_bool() }}"
    screen_views:
      +schema: "derived"
      +tags: "snowplow_mobile_incremental"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
        default:
          enabled: "{{ target.type in ['bigquery', 'databricks', 'snowflake', 'spark'] | as_bool() }}"
        redshift_postgres:
          enabled: "{{ target.type in ['redshift','postgres'] | as_bool() }}"
    sessions:
      +schema: "derived"
      +tags: "snowplow_mobile_incremental"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
    user_mapping:
      +schema: "derived"
      +tags: "snowplow_mobile_incremental"
    users:
      +schema: "derived"
      +tags: "snowplow_mobile_incremental"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
