name: 'snowplow_mobile'
version: '1.0.0'
config-version: 2

require-dbt-version: [">=1.6.0", "<2.0.0"]

profile: 'default'

dispatch:
  - macro_namespace: dbt
    search_order: ['snowplow_utils', 'dbt']

model-paths: ["models"]
test-paths: ["tests"]
macro-paths: ["macros"]
docs-paths: ["docs"]
asset-paths: ["assets"]

target-path: "target"
clean-targets:
    - "target"
    - "dbt_modules"
    - "dbt_packages"

vars:
  snowplow_mobile:
    # See https://docs.snowplow.io/docs/modeling-your-data/modeling-your-data-with-dbt/dbt-configuration/mobile/ for more information and an interactive tool to help you with the variable setup
    # Please only add those that you change the values of to your root dbt_project.yml file, do not copy all values as this can lead to unexpected issues

    # WAREHOUSE & TRACKER
    # See https://docs.snowplow.io/docs/modeling-your-data/modeling-your-data-with-dbt/dbt-configuration/mobile/ for more information
    # snowplow__atomic_schema: "atomic_data_sample" # Only set if not using 'atomic' schema for Snowplow events data
    # snowplow__database: Only set if not using target.database for Snowplow events data -- WILL BE IGNORED FOR DATABRICKS
    snowplow__dev_target_name: 'dev'
    snowplow__events: "{{ source('atomic', 'events') }}"
    # snowplow__events_table: "events" # Only set if not using 'events' table for Snowplow events data
    snowplow__sessions_table: "{{ ref('snowplow_mobile_sessions') }}" # Change to your custom sessions table if you have disabled the standard sessions table in favour of a custom version. Advanced config.

    # OPERATION & LOGIC
    snowplow__allow_refresh: false
    snowplow__backfill_limit_days: 30
    snowplow__days_late_allowed: 3
    snowplow__lookback_window_hours: 6
    snowplow__max_session_days: 3
    snowplow__session_lookback_days: 730
    snowplow__session_identifiers: []
    # snowplow__session_sql: 'sc.session_id'  # takes priority over session_identifiers
    snowplow__session_stitching: true
    snowplow__session_timestamp: collector_tstamp # Used to manage utils version higher than 0.15.1, do not change until new base macro is used
    snowplow__start_date: "2020-01-01"
    snowplow__upsert_lookback_days: 30
    snowplow__user_identifiers: []
    # snowplow__user_sql: 'sc.user_id' # takes priority over user identifiers
    snowplow__user_stitching_id: 'user_id'

    # CONTEXTS, FILTERS, & LOGS
    snowplow__app_id: []
    snowplow__enable_mobile_context: false
    snowplow__enable_geolocation_context: false
    snowplow__enable_application_context: false
    snowplow__enable_screen_context: false
    snowplow__enable_app_errors_module: false
    snowplow__has_log_enabled: true
    snowplow__platform: ['mob']
    snowplow__screen_view_passthroughs: []
    snowplow__session_passthroughs: []
    snowplow__user_first_passthroughs: []
    snowplow__user_last_passthroughs: []

    # WAREHOUSE SPECIFIC
      # Bigquery
    snowplow__derived_tstamp_partitioned: true
      # Snowflake
    snowplow__query_tag: "snowplow_dbt"
      # Databricks
    # Depending on the use case it should either be the catalog (for Unity Catalog users from databricks connector 1.1.1 onwards) or the same value as your snowplow__atomic_schema (unless changed it should be 'atomic')
    # snowplow__databricks_catalog: 'hive_metastore'
      # Redshift/postgres
    snowplow__entities_or_sdes: []
    snowplow__session_context: com_snowplowanalytics_snowplow_client_session_1
    snowplow__mobile_context: com_snowplowanalytics_snowplow_mobile_context_1
    snowplow__geolocation_context: com_snowplowanalytics_snowplow_geolocation_context_1
    snowplow__application_context: com_snowplowanalytics_mobile_application_1
    snowplow__screen_context: com_snowplowanalytics_mobile_screen_1
    snowplow__application_error_events: com_snowplowanalytics_snowplow_application_error_1
    snowplow__screen_view_events: com_snowplowanalytics_mobile_screen_view_1

# Remove models from the manifest during run start.
on-run-start:
  - "{{ snowplow_utils.snowplow_mobile_delete_from_manifest(var('models_to_remove', [])) }}"

# Update manifest table with last event consumed per sucessfully executed node/model
on-run-end:
  - "{{ snowplow_utils.snowplow_incremental_post_hook('snowplow_mobile', 'snowplow_mobile_incremental_manifest', 'snowplow_mobile_base_events_this_run', var('snowplow__session_timestamp', 'load_tstamp')) }}"


# Tag 'snowplow_mobile_incremental' allows snowplow_incremental_post_hook to identify Snowplow models
# and add their last sucessfull collector_tstamp to the manifest.
models:
  snowplow_mobile:
    +materialized: table
    base:
      manifest:
        +schema: "snowplow_manifest"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
        bigquery:
          enabled: "{{ target.type == 'bigquery' | as_bool() }}"
        databricks:
          enabled: "{{ target.type in ['databricks', 'spark'] | as_bool() }}"
        redshift_postgres:
          enabled: "{{ target.type in ['redshift','postgres'] | as_bool() }}"
        snowflake:
          enabled: "{{ target.type == 'snowflake' | as_bool() }}"
    optional_modules:
      app_errors:
        +schema: "derived"
        +tags: "snowplow_mobile_incremental"
        scratch:
          +schema: "scratch"
          +tags: "scratch"
          bigquery:
            enabled: "{{ target.type == 'bigquery' | as_bool() }}"
          databricks:
            enabled: "{{ target.type in ['databricks', 'spark'] | as_bool() }}"
          redshift_postgres:
            enabled: "{{ target.type in ['redshift','postgres'] | as_bool() }}"
          snowflake:
            enabled: "{{ target.type == 'snowflake' | as_bool() }}"
    screen_views:
      +schema: "derived"
      +tags: "snowplow_mobile_incremental"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
    sessions:
      +schema: "derived"
      +tags: "snowplow_mobile_incremental"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
    user_mapping:
      +schema: "derived"
      +tags: "snowplow_mobile_incremental"
    users:
      +schema: "derived"
      +tags: "snowplow_mobile_incremental"
      scratch:
        +schema: "scratch"
        +tags: "scratch"
